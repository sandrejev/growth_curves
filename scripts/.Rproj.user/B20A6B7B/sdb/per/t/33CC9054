{
    "collab_server" : "",
    "contents" : "library(plyr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(igraph)\nlibrary(ape)\nsource(\"analyze.functions.R\")\n\n\nphylumcol = c(\"Bacteroidetes\"=\"#8DD3C7\", \"Firmicutes\"=\"#FFFFB3\", \"Proteobacteria\"=\"#BEBADA\", \"Actinobacteria\"=\"#FB8072\", \"Verrucomicrobia\"=\"#80B1D3\", \"Fusobacteria\"=\"#B3DE69\")\n\nspecies.general = c(\"A. odontolyticus\", \"B. adolescentis\", \"B. animalis subsp. lactis BI-07\", \"B. animalis subsp. lactis BL-04\", \n                    \"B. caccae\", \"B. clarus\", \"B. dorei\", \"B. fragilis\", \"B. fragilis enterotoxigenic\", \"B. fragilis HM-20\", \"B. fragilis HM-709\", \n                    \"B. fragilis HM-710\", \"B. fragilis HM-711\", \"B. fragilis HM-712\", \"B. fragilis HM-713\", \"B. fragilis HM-714\", \"B. hansenii\", \n                    \"B. longum subsp. infantis\", \"B. obeum\", \"B. ovatus\", \"B. stercoris\", \"B. thetaiotaomicron\", \"B. uniformis\", \"B. uniformis HM-715\", \n                    \"B. uniformis HM-716\", \"B. vulgatus\", \"B. vulgatus HM-720\", \"B. xylanisolvens\", \"C. aerofaciens\", \"C. comes\", \"C. perfringens C36\", \n                    \"C. perfringens S107\", \"C. ramosum\", \"C. saccharolyticum\", \"D. formicigenerans\", \"D. piger\", \"E. coli CFT073\", \"E. coli E2348/69\", \n                    \"E. coli ED1a\", \"E. coli H10407\", \"E. coli HM605\", \"E. coli IAI1\", \"E. coli UTI89\", \"E. eligens\", \"E. lenta\", \"E. limosum\", \"E. rectale\", \n                    \"E. siraeum\", \"F. nucleatum subsp. animalis\", \"F. nucleatum subsp. nucleatum\", \"L. fermentum\", \"L. gasseri\", \"L. lactis\", \"L. paracasei\", \n                    \"L. plantarum\", \"L. salivarius\", \"L. vaginalis\", \"P. difficile\", \"P. distasonis\", \"P. merdae\", \"R. gnavus\", \"R. intestinalis\", \n                    \"S. flexneri\", \"S. parasanguinis\", \"S. salivarius\", \"S. sonnei\", \"S. typhimurium ATCC14028\", \"S. typhimurium LT2\", \"V. cholerae A1552\", \n                    \"V. cholerae N16961\", \"V. parvula\", \"Y. pseudotuberculosis\")\n\nmedia.annotation = read.delim(\"../data/media_names.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\nmedia.annotation = media.annotation[order(media.annotation$Order),]\nmedia.names = sapply(media.annotation$ShortName, function(x) media.annotation$FullName[match(x, media.annotation$ShortName)])\nmedia.names2 = sapply(media.annotation$ShortName, function(x) media.annotation$FullName2[match(x, media.annotation$ShortName)])\nmedia.general = media.annotation$ShortName[media.annotation$IsGeneral==1]\nmedia.rich = media.annotation$ShortName[media.annotation$IsRich==1]\nmedia.defined = as.character(c(2:5, 7, 10:11))\nmedia.files = sapply(media.annotation$ShortName, function(x) media.annotation$Filename[match(x, media.annotation$ShortName)])\n\n\norganisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\nrownames(organisms.ann) = organisms.ann$species\n\n\nheatmap.obsulute = function()\n{\n  curves.tech = read.table(\"../data/curves.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.tech = subset(curves.tech, !is.na(Species) & is.na(ConditionSpecies) & Passage==1)\n  curves.tech = ddply(curves.tech, .(Species, Media), summarize, \n                      TechnicalReplicatesCount=length(unique(paste(File, Well))),\n                      BiologicalReplicatesCount=length(unique(paste(File, Well))))\n  \n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = subset(curves.a, !is.na(Species) & is.na(ConditionSpecies) & Passage==1)\n  \n\n  ########################################################################\n  #\n  # Growth Matrix\n  #\n  ########################################################################\n  curves.a.f = curves.a\n  growth_matrix.q1 = cuves.merge_annotations2(curves.a.f)\n  growth_matrix.q1 = merge(growth_matrix.q1, curves.tech, by=c(\"Species\", \"Media\"))\n  growth_matrix.q1$ReplicatesText = paste0(growth_matrix.q1$Replicates, \" (\", growth_matrix.q1$TechnicalReplicatesCount, \")\")\n  growth_matrix.q.replicates = dcast(growth_matrix.q1, Species ~ Media, value.var=\"ReplicatesText\")\n  growth_matrix.q.replicates = growth_matrix.q.replicates[,c(\"Species\", \"GMM\", \"BHI++\", \"WCA\", \"mGAM\", as.character(1:5), as.character(7:11), \"13\", \"14\", \"15 A\", \"15 B\", \"16\")]\n  colnames(growth_matrix.q.replicates)[6:20] = paste0(\"M\", colnames(growth_matrix.q.replicates)[6:20])\n  write.table(growth_matrix.q.replicates, file=\"../data/supplementary/curves_annotation_replicates.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n  \n  growth_matrix.q.raw = dcast(growth_matrix.q1, Media ~ Species, value.var=\"MaxOD\")\n  rownames(growth_matrix.q.raw) = growth_matrix.q.raw$Media\n  growth_matrix.q.raw$Media = NULL\n  growth_matrix.q.raw = growth_matrix.q.raw[media.annotation$ShortName[media.annotation$ShortName %in% rownames(growth_matrix.q.raw)],] \n  \n  #########################################\n  # Plot overview histograms\n  ##########################################\n  media.hist = data.frame(media=rownames(growth_matrix.q.raw), species.n=rowSums(!is.na(growth_matrix.q.raw) &  growth_matrix.q.raw > 0))\n  media.hist$media_type = \"Other\"\n  media.hist$media_type[media.hist$media %in% media.rich] = \"Rich\"\n  media.hist$media_type[media.hist$media %in% c(\"8\", \"9\")] = \"Mucin\"\n  media.hist$media_type[media.hist$media %in% as.character(c(2:7, 10:11))] = \"Defined\"\n  media.hist$media_type[media.hist$media %in% c(\"1\", \"13\", \"14\", \"15 A\", \"15 B\", \"16\")] = \"Minimal\"\n  media.hist$media_type = factor(media.hist$media_type, c(\"Minimal\", \"Defined\", \"Mucin\", \"Rich\"))\n  species.hist = data.frame(species=colnames(growth_matrix.q.raw), media.n=colSums(!is.na(growth_matrix.q.raw) &  growth_matrix.q.raw > 0))\n\n  pdf(\"../report/growth_capacity_histogram.pdf\", height=4.5, width=7.5)\n  gridExtra::grid.arrange(  \n  ggplot(media.hist) +\n    geom_histogram(aes(x=species.n, fill=media_type), binwidth=5, position=\"stack\", color=\"#000000\") +\n    theme_slim() +\n    scale_fill_manual(values=RColorBrewer::brewer.pal(5, \"Greys\")[c(1,2,4,5)]) +\n    coord_cartesian(xlim=c(-2.5, 100)) +\n    scale_x_continuous(breaks=seq(0, 100, 25)) +\n    theme(legend.position = c(0.1, 0.8)) +\n    labs(x = \"Number of species growing in media\", y=\"\")\n  ,\n  ggplot(species.hist) +\n    geom_histogram(aes(x=media.n), binwidth=1, position=\"stack\", color=\"#000000\", fill=\"#D4D4D4\") +\n    theme_slim() +\n    labs(x = \"Number of media supporting species\", y=\"\")\n    ,\n  ncol=1)\n  dev.off()\n  \n  ############################################\n  # Export growth matrix\n  ############################################\n  growth_matrix.q.export = data.frame(t(growth_matrix.q.raw))\n  colnames(growth_matrix.q.export) = gsub(\"\\\\.\", \"\", gsub(\"^X\", \"M\", colnames(growth_matrix.q.export)))\n  growth_matrix.q.export$species = rownames(growth_matrix.q.export)\n  growth_matrix.q.export = growth_matrix.q.export[,c(\"species\", \"GMM\", \"BHI\", \"WCA\", \"mGAM\", paste0(\"M\", c(1:5,7:11, 13:14, \"15A\", \"15B\", \"16\")))]\n  write.table(growth_matrix.q.export, file=\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n\n  growth_matrix.q.species_growth = colMeans(growth_matrix.q.raw[media.general,], na.rm=T)\n  growth_matrix.q.media_growth = rowMeans(growth_matrix.q.raw[,species.general], na.rm=T)\n  growth_matrix.q.raw = growth_matrix.q.raw[,order(growth_matrix.q.species_growth)]\n  growth_matrix.q.species_growth = colMeans(growth_matrix.q.raw[media.general,], na.rm=T)\n  growth_matrix.q.media_growth = rowMeans(growth_matrix.q.raw[,species.general], na.rm=T)\n  \n  growth_matrix.q = growth_matrix.q.raw\n  growth_matrix.q.rownames_raw = rownames(growth_matrix.q.raw)\n  growth_matrix.q.rownames = media.names2[growth_matrix.q.rownames_raw]\n  growth_matrix.q.pal = colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\")[2:9])\n  growth_matrix.q.breaks50 = c(0, 0.01, seq(0.02, max(growth_matrix.q.raw, na.rm=T), length.out = 48))\n  growth_matrix.q.colnames = colnames(growth_matrix.q)\n  \n  rownames(growth_matrix.q) = growth_matrix.q.rownames\n  colnames(growth_matrix.q) = growth_matrix.q.colnames\n\n  growth_matrix.q.count_raw = dcast(growth_matrix.q1, Media ~ Species, value.var=\"Count\")\n  growth_matrix.q.count = growth_matrix.q.count_raw\n  growth_matrix.q.count[is.na(growth_matrix.q.count)] = \"\"\n  rownames(growth_matrix.q.count) = growth_matrix.q.count$Media\n  growth_matrix.q.count$Media = NULL\n  growth_matrix.q.count = growth_matrix.q.count[rownames(growth_matrix.q.raw),colnames(growth_matrix.q.raw)]\n  \n  #\n  # Annotations\n  #\n  growth_matrix.q.col_growth.color = growth_matrix.q.pal(100)[sapply(growth_matrix.q.species_growth, function(x) { which.min(abs(x - seq(0, max(growth_matrix.q, na.rm=T), length.out=100))) })]\n  growth_matrix.q.row_growth.color = growth_matrix.q.pal(100)[sapply(growth_matrix.q.media_growth, function(x) { which.min(abs(x - seq(0, max(growth_matrix.q, na.rm=T), length.out=100))) })]\n  \n  growth_matrix.q.col.ann = cbind(data.frame(avg.OD=growth_matrix.q.species_growth, row.names=colnames(growth_matrix.q)), organisms.ann[growth_matrix.q.colnames, ])\n  growth_matrix.q.row.ann = data.frame(\n    avg.OD=growth_matrix.q.media_growth, \n    row.names=rownames(growth_matrix.q)[sapply(names(growth_matrix.q.media_growth), function(x) grep(paste0(\"^\", gsub(\"[^A-Za-z0-9]\", \"\", x), \"\\\\b\"), rownames(growth_matrix.q)))], \n    stringsAsFactors=F)\n  \n  anncol = c(\"avg.OD\", \"phylum\")\n  bincol = c(Yes=\"#1F78B4\", No=\"#A6CEE3\")\n  growth_matrix.q.ann.colors = list(\n    avg.OD=growth_matrix.q.pal(100), \n    ARRANGEMENT_SINGLES=bincol, \n    ARRANGEMENT_CLUSTER=bincol,\n    phylum=phylumcol,\n    pathogen=bincol, \n    motility=bincol, \n    media_utilisation=colorRampPalette(RColorBrewer::brewer.pal(9, \"Greens\"))(100),\n    sort=colorRampPalette(RColorBrewer::brewer.pal(9, \"Greens\"))(100), \n    gut_prevalence=colorRampPalette(RColorBrewer::brewer.pal(9, \"Greens\"))(100)\n  )[anncol]\n  \n  \n  growth_matrix.q.order = growth_matrix.q[,order(organisms.ann$sort[match(growth_matrix.q.colnames, organisms.ann$species)])]\n  growth_matrix.q.count.order = growth_matrix.q.count[,order(organisms.ann$sort[match(growth_matrix.q.colnames, organisms.ann$species)])]\n  pheatmap(t(growth_matrix.q.order), cluster_rows=F,\n           cluster_cols=F, gaps_row=rep(0,4), gaps_col=c(0, 0, rep(which(!duplicated(media.annotation$Type))[-1]-2, each=2)),\n           color=c(\"#CCCCCC\", growth_matrix.q.pal(48)), breaks=growth_matrix.q.breaks50, border_color=\"#FFFFFF\",\n           main=\"Growth heatmap (OD)\", key.title=\"\", key.ylab=\"\", key.xlab=\"OD\", \n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           annotation_col=growth_matrix.q.row.ann,  \n           annotation_row=growth_matrix.q.col.ann[,anncol], annotation_color=growth_matrix.q.ann.colors,\n           filename=\"../report/growth_matrix_sorted.pdf\")\n  \n  \n  #colnames(growth_matrix.q) = gsub(\"[^A-Za-z0-9]+\", \"_\", colnames(growth_matrix.q))\n  growth_matrix.q.row_dist = dist.species(growth_matrix.q)\n  pheatmap(mat=t(growth_matrix.q), #display_numbers=t(growth_matrix.q.count), \n           clustering_distance_rows=growth_matrix.q.row_dist, clustering_method=\"average\",\n           cluster_cols=F, gaps_row=rep(0,4), gaps_col=c(0, 0, rep(which(!duplicated(media.annotation$Type))[-1]-2, each=2)),\n           color=c(\"#CCCCCC\", growth_matrix.q.pal(48)), breaks=growth_matrix.q.breaks50, border_color=\"#FFFFFF\", \n           main=\"Growth heatmap (OD)\", key.title=\"\", key.ylab=\"\", key.xlab=\"OD\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           fontsize_number=8,\n           annotation_col=growth_matrix.q.row.ann,  \n           annotation_row=growth_matrix.q.col.ann[,anncol], annotation_color=growth_matrix.q.ann.colors,\n           filename=\"../report/growth_matrix_clustered.pdf\")\n  \n  species.defined_preference = c(\"A. odontolyticus\",\"B. adolescentis\",\"B. dorei\",\"B. longum subsp. infantis\",\"C. comes\",\"D. formicigenerans\",\"E. eligens\",\"E. limosum\",\"P. distasonis\",\"S. parasanguinis\",\"S. typhimurium LT2\")\n  growth_matrix.q.pref = growth_matrix.q[,species.defined_preference]\n  growth_matrix.q.pref.row_dist = dist.species(growth_matrix.q.pref)\n  pheatmap(mat=t(growth_matrix.q.pref), #display_numbers=t(growth_matrix.q.count), \n           clustering_distance_rows=growth_matrix.q.pref.row_dist, clustering_method=\"average\",\n           cluster_cols=F, gaps_row=rep(0,4), gaps_col=c(0, 0, rep(which(!duplicated(media.annotation$Type))[-1]-2, each=2)),\n           color=c(\"#CCCCCC\", growth_matrix.q.pal(48)), breaks=growth_matrix.q.breaks50, border_color=\"#FFFFFF\", \n           main=\"Growth heatmap (OD)\", key.title=\"\", key.ylab=\"\", key.xlab=\"OD\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           fontsize_number=8,\n           annotation_col=growth_matrix.q.row.ann,  \n           annotation_row=growth_matrix.q.col.ann[,anncol], annotation_color=growth_matrix.q.ann.colors,\n          filename=\"../report/growth_matrix_defined_preference.pdf\")\n  \n  species.bacteroides = organisms.ann$species[organisms.ann$genus==\"Bacteroides\"]\n  growth_matrix.q.bact = growth_matrix.q[,species.bacteroides]\n  growth_matrix.q.bact.row_dist = dist.species(growth_matrix.q.bact)\n  pheatmap(mat=t(growth_matrix.q.bact), #display_numbers=t(growth_matrix.q.count), \n           clustering_distance_rows=growth_matrix.q.bact.row_dist, clustering_method=\"average\",\n           cluster_cols=F, gaps_row=rep(0,4), gaps_col=c(0, 0, rep(which(!duplicated(media.annotation$Type))[-1]-2, each=2)),\n           color=c(\"#CCCCCC\", growth_matrix.q.pal(48)), breaks=growth_matrix.q.breaks50, border_color=\"#FFFFFF\", \n           main=\"Growth heatmap (OD)\", key.title=\"\", key.ylab=\"\", key.xlab=\"OD\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           fontsize_number=8,\n           annotation_col=growth_matrix.q.row.ann,  \n           annotation_row=growth_matrix.q.col.ann[,anncol], annotation_color=growth_matrix.q.ann.colors,\n           filename=\"../report/growth_matrix_bacteroides.pdf\")\n  \n  \n  species.mucin = c(\"A. muciniphila\", \"R. torques\")\n  growth_matrix.q.mucin = growth_matrix.q[,species.mucin]\n  growth_matrix.q.mucin.row_dist = dist.species(growth_matrix.q.mucin)\n  pheatmap(mat=t(growth_matrix.q.mucin), #display_numbers=t(growth_matrix.q.count), \n           clustering_distance_rows=growth_matrix.q.mucin.row_dist, clustering_method=\"average\",\n           cluster_cols=F, gaps_row=rep(0,4), gaps_col=c(0, 0, rep(which(!duplicated(media.annotation$Type))[-1]-2, each=2)),\n           color=c(\"#CCCCCC\", growth_matrix.q.pal(48)), breaks=growth_matrix.q.breaks50, border_color=\"#FFFFFF\", \n           main=\"Growth heatmap (OD)\", key.title=\"\", key.ylab=\"\", key.xlab=\"OD\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           fontsize_number=8,\n           annotation_col=growth_matrix.q.row.ann,  \n           annotation_row=growth_matrix.q.col.ann[,anncol], annotation_color=growth_matrix.q.ann.colors,\n           filename=\"../report/growth_matrix_mucin.pdf\")\n}\n\nheatmap.curves = function()\n{\n  curves = read.table(\"../data/curves.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  x = ddply(subset(curves, Passage==1 & !is.na(Media)), .(Row, Col, Well, TechnicalReplicates, Species, Media, ConditionSpecies), summarize, MaxOD=max(OD, na.rm=T), BlankOD=min(OD, na.rm=T))\n  ggplot(x, aes(Col, Row)) +\n    geom_tile(aes(fill=MaxOD-BlankOD), color=\"#eeeeee\") +\n    geom_text(aes(label=paste0(Media, \"\\n\", ConditionSpecies, \"\\n\", MaxOD-BlankOD)), size=3, color=\"#ffffff\") + \n    scale_x_continuous(breaks=1:12) +\n    scale_fill_continuous(low=\"#FFFFFF\", high=\"#08306B\") +\n    theme_bw()\n    \n    \n  \n  curves.f.medias = c(\"1\", \"13\", \"14\", \"15 A\", \"15 B\", \"16\", \"2\", \"3\", \"4\", \"5\", \"7\", \"10\", \"11\", \"8\", \"9\", \"GMM\", \"BHI++\", \"WCA\", \"mGAM\")\n  curves = read.table(\"../data/curves.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.f = subset(curves, !is.na(Species) & is.na(ConditionSpecies) & !is.na(Media) & Passage==1 & Media %in% curves.f.medias)\n  curves.f$MediaType = \"Other\"\n  curves.f$MediaType[curves.f$Media %in% media.rich] = \"Rich\"\n  curves.f$MediaType[curves.f$Media %in% c(\"8\", \"9\")] = \"Mucin\"\n  curves.f$MediaType[curves.f$Media %in% as.character(c(2:7, 10:11))] = \"Defined\"\n  curves.f$MediaType[curves.f$Media %in% c(\"1\", \"13\", \"14\", \"15 A\", \"15 B\", \"16\")] = \"Minimal\"\n  curves.f$MediaType = factor(curves.f$MediaType, c(\"Minimal\", \"Defined\", \"Mucin\", \"Rich\"))\n  curves.f$Media = factor(curves.f$Media, )\n  curves.f = ddply(curves.f, .(File), mutate, AllSpecies=paste(unique(Species), collapse=\",\"))\n  curves.f = curves.f[with(curves.f, order(Species, Media, Time)),]\n  curves.f$File2 = paste0(curves.f$File, \"\\n\", substring(curves.f$AllSpecies, 1, 50))\n  curves.f$Species = gsub(\"\\n$\", \"\", gsub(\"^([^ ]+ [^ ]+ [^ ]+ [^ ]+)\", \"\\\\1\\n\", gsub(\"^([^ ]+ [^ ]+)\", \"\\\\1\\n\", curves.f$Species)))\n  #curves.f = curves.f[1:10000,]\n  \n  pdf(\"../report/curves_matrix.pdf\", height=60, width=15)\n  ggplot(curves.f) +\n    geom_rect(aes(fill=MediaType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.1, data=unique(curves.f[,c(\"Species\", \"Media\", \"MediaType\")])) +\n    geom_line(aes(x=Time/3600, y=OD, group=paste(File, TechnicalReplicates, Well), color=factor(Volume)), size=0.5) +\n    facet_grid(Species ~ Media) +\n    theme_classic(base_size=7) + \n    theme(strip.text.y = element_text(angle = 0))\n  dev.off()\n  \n  pdf(\"../report/curves_matrix_file.pdf\", height=60, width=15)\n  contaminants = read.table(\"../data/suspected_contamination.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  contaminants = merge(contaminants, unique(curves.f[,c(\"File\", \"File2\", \"Media\")]))\n  ggplot(curves.f[!duplicated(curves.f$File, curves.f$Media),]) +\n    geom_rect(aes(fill=MediaType), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.1, data=unique(curves.f[,c(\"File2\", \"Media\", \"MediaType\")])) +\n    geom_rect(aes(fill=\"Contamination\"), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=0.2, alpha=0.1, data=contaminants) +\n    geom_line(aes(x=Time/3600, y=OD, group=paste(File, TechnicalReplicates, Well), color=Species), size=0.1) +\n    facet_grid(File2 ~ Media) +\n    theme_classic(base_size=7) + \n    theme(strip.text.y = element_text(angle = 0, family=\"Times\", size=rel(1.4))) +\n    guides(color=element_blank())\n  dev.off()\n  \n}\n\nheatmap.relative = function()\n{\n  set.seed(0)\n  \n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = subset(curves.a, !is.na(Species) & is.na(ConditionSpecies) & !is.na(Media) & Passage==1)\n  \n  curves.a.wide = ddply(curves.a, .(File, Species), function(z) {\n    z.3 = subset(z, Media==3)\n    if(!nrow(z.3)) return(NULL)\n    z.other = subset(z, Media != 3)\n    \n    maxod.other = z.other$MaxOD-z.other$BlankOD\n    if(any(maxod.other<0)) maxod.other[maxod.other<0] = jitter(mean(maxod.other[maxod.other>0], na.rm=T))\n    maxod.3 = z.3$MaxOD-z.3$BlankOD\n    if(any(maxod.3<0)) maxod.3[maxod.3<0] = jitter(mean(maxod.other[maxod.other>0], na.rm=T))\n    maxod.fold = log2(maxod.other/maxod.3)\n\n    ret = data.frame(Media=z.other$Media, MaxOD.fold=maxod.fold, MaxOD.3=maxod.3, MaxOD.other=maxod.other, Class.other=z.other$Class, Class.3=z.3$Class)\n    ret\n  })\n\n\n  curves.a.fold = ddply(curves.a.wide, .(Species, Media), function(z) {\n    z.f = !grepl(\"NoGrowth\", z$Class.other) | !grepl(\"NoGrowth\", z$Class.3)\n    if(mean(z.f) > 0.5) {\n      z.ff = z.f & is.finite(z$MaxOD.fold) & !grepl(\"Unfin\", z$Class.other)\n      maxod.pval = c()\n      maxod.fold = c()\n      if(sum(z.ff) > 1) {\n        maxod.pval = t.test(z$MaxOD.other[z.ff], z$MaxOD.3[z.ff], paired=T)$p.value\n        maxod.fold = mean(z$MaxOD.fold[z.ff])\n      }\n      \n      z.ff = z.f & is.finite(z$MaxOD.fold)\n      if(sum(z.ff) > 1) {\n        maxod.pval = t.test(z$MaxOD.other[z.ff], z$MaxOD.3[z.ff], paired=T)$p.value\n        maxod.fold = mean(z$MaxOD.fold[z.ff])\n      }\n      \n      if(length(maxod.pval) == 0) {\n        return(data.frame(MaxOD.fold=mean(z$MaxOD.fold[z.f]), MaxOD.pval=NA))\n      }\n      \n      return(data.frame(MaxOD.fold=maxod.fold[which.min(maxod.pval)], MaxOD.pval=min(maxod.pval)))\n    }\n    z.f = grepl(\"NoGrowth\", z$Class.other) & grepl(\"NoGrowth\", z$Class.3)\n    if(mean(z.f) > 0.5) return(data.frame(MaxOD.fold=0, MaxOD.pval=1))\n    \n    return(NULL)\n  })\n\n  curves.a.fold$MaxOD.pval.adj = p.adjust(curves.a.fold$MaxOD.pval)\n  curves.a.rep = ddply(curves.a, .(Species, Media), summarize, replicates=paste0(sum(!grepl(\"NoGrowth\", Class)), \"/\",length(File)))\n  curves.a.fold = merge(curves.a.fold, curves.a.rep, by=c(\"Species\", \"Media\"))\n  write.table(curves.a.fold, file=\"../data/curves_annotation_rel.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n  \n  curves.a.fold$MaxOD.text = with(curves.a.fold, ifelse(MaxOD.fold>0, \"+\", ifelse(MaxOD.fold<0, \"-\", \"\")))\n  curves.a.fold$MaxOD.pval.text = with(curves.a.fold, ifelse(!is.na(MaxOD.pval) & MaxOD.pval <= 0.05, \"*\", \"\"))\n  curves.a.fold$text = with(curves.a.fold, paste0(MaxOD.text, replicates, MaxOD.pval.text))\n    \n  growth_matrix = dcast(curves.a.fold, Species ~ Media, value.var=\"MaxOD.fold\")\n  growth_matrix = merge(growth_matrix, organisms.ann[,c(\"species\", \"sort\")], by.x=\"Species\", by.y=\"species\")\n  growth_matrix = growth_matrix[order(growth_matrix$sort),]\n  rownames(growth_matrix) = growth_matrix$Species\n  growth_matrix$Species = NULL\n  growth_matrix$sort = NULL\n  growth_matrix = growth_matrix[,c(\"1\", \"13\", \"14\", \"15 A\", \"15 B\", \"16\", \"2\", \"4\", \"5\", \"7\", \"10\", \"11\", \"8\", \"9\", \"GMM\", \"BHI++\", \"WCA\", \"mGAM\")]\n  growth_matrix = data.matrix(growth_matrix)\n  growth_matrix.vals = growth_matrix[is.numeric(growth_matrix) & is.finite(growth_matrix)]\n\n  growth_matrix.text = dcast(curves.a.fold, Species ~ Media, value.var=\"text\")\n  rownames(growth_matrix.text) = growth_matrix.text$Species\n  growth_matrix.text$Species = NULL\n  growth_matrix.text = as.matrix(growth_matrix.text)\n  \n  growth_matrix.ann = subset(cuves.merge_annotations2(curves.a, nogrowth=T), Media==9, c(Species, MaxOD))\n  colnames(growth_matrix.ann) = c(\"species\", \"M9\")\n  growth_matrix.ann = merge(growth_matrix.ann, organisms.ann, by=\"species\")[,c(\"species\", \"M9\", \"phylum\")]\n  rownames(growth_matrix.ann) = growth_matrix.ann$species\n  growth_matrix.ann$species = NULL\n  \n  growth_matrix.pal_max = 5\n  growth_matrix.pal_breaks = seq(-max(abs(growth_matrix.vals)), max(abs(growth_matrix.vals)), length.out=109)\n  growth_matrix.pal = colorRampPalette(c(rev(RColorBrewer::brewer.pal(8, \"PuBu\")[1:7]), rep(\"white\", 1), RColorBrewer::brewer.pal(8, \"Reds\")[1:7]))(sum(growth_matrix.pal_breaks>=-growth_matrix.pal_max & growth_matrix.pal_breaks<=growth_matrix.pal_max))\n  growth_matrix.pal = c(rep(growth_matrix.pal[1], sum(growth_matrix.pal_breaks<(-growth_matrix.pal_max))), growth_matrix.pal)\n  growth_matrix.pal = c(growth_matrix.pal, rep(growth_matrix.pal[length(growth_matrix.pal)], sum(growth_matrix.pal_breaks>growth_matrix.pal_max)))\n  growth_matrix.ann.colors = list(\n    M9=colorRampPalette(RColorBrewer::brewer.pal(9, \"Greys\")[2:9])(100),\n    phylum = c(\"Bacteroidetes\"=\"#8DD3C7\", \"Firmicutes\"=\"#FFFFB3\", \"Proteobacteria\"=\"#BEBADA\", \"Actinobacteria\"=\"#FB8072\", \"Verrucomicrobia\"=\"#80B1D3\", \"Fusobacteria\"=\"#B3DE69\")\n  )\n\n  # removed: \"V. parvula\", \"P. melaninogenica\", \"B. uniformis\", \"R. hominis\",\n  fig4a.species = c(\"B. obeum\", \"B. uniformis HM−715\", \"B. uniformis HM−716\", \"B. fragilis HM−20\", \"B. ovatus\", \"B. eggerthii\", \n                    \"B. clarus\", \"F. nucleatum subsp. nucleatum\", \"B. thetaiotaomicron\", \"P. merdae\", \"B. xylanisolvens\",\n                    \"R. intestinalis\", \"C. saccharolyticum\", \"L. sakei subsp. sakei\", \"L. paracasei\", \"L. salivarius\", \"L. vaginalis\", \n                    \"L. ruminis\", \"C. perfringens C36\")\n  fig4a.media = c(\"5\", \"10\", \"11\")\n  fig4a.matrix = growth_matrix[fig4a.species,fig4a.media]\n  fig4a.matrix_text = growth_matrix.text[fig4a.species,fig4a.media]\n  pheatmap(fig4a.matrix, main=\"Relative effect on growth (OD)\", \n           cluster_rows=F,cluster_cols=F,\n           annotation_row=growth_matrix.ann, \n           annotation_colors=growth_matrix.ann.colors,\n           color=growth_matrix.pal, breaks=growth_matrix.pal_breaks, border_color=\"#CCCCCC\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           #display_numbers=fig4a.matrix_text, fontsize_number=8,\n           filename=\"../report/new_fig4a_media_influence_scfa.pdf\")\n  \n  # removed: \"F. nucleatum subsp. nucleatum\", \n  fig4b.species = c(\"C. aerofaciens\", \"R. hominis\", \"B. longum subsp. longum\", \"A. muciniphila\", \"R. torques\", \"C. comes\", \"B. fragilis HM−713\", \"B. stercoris\", \"B. clarus\", \"B. thetaiotaomicron\")\n  fig4b.media = c(\"8\")\n  fig4b.matrix = growth_matrix[fig4b.species,fig4b.media, drop=F]\n  fig4b.matrix_text = growth_matrix.text[fig4b.species,fig4b.media, drop=F]\n  pheatmap(fig4b.matrix, main=\"Relative effect on growth (OD)\", \n           cluster_rows=F,cluster_cols=F,\n           annotation_row=growth_matrix.ann, \n           annotation_colors=growth_matrix.ann.colors,\n           color=growth_matrix.pal, breaks=growth_matrix.pal_breaks, border_color=\"#CCCCCC\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16)\n  ,\n           #display_numbers=fig4b.matrix_text, fontsize_number=8,\n           filename=\"../report/new_fig4b_media_influence_mucin.pdf\")\n  \n  \n  figS4a.species = c(\"A. muciniphila\", \"V. cholerae N16961\", \"H. parainfluenzae\", \"Y. pseudotuberculosis\", \"S. sonnei\", \"S. flexneri\", \"S. typhimurium LT2\", \"E. coli UTI89\", \"E. coli IAI1\", \"E. coli HM605\", \"E. coli H10407\", \"E. coli ED1a\", \"E. coli E2348/69\", \"E. coli CFT073\", \"D. piger\", \"F. nucleatum subsp. nucleatum\", \"F. nucleatum subsp. vincentii\", \"F. nucleatum subsp. animalis\", \"V. parvula\", \"P. capillosus\", \"R. bromii\", \"R. torques\", \"R. gnavus\", \"R. intestinalis\", \"R. hominis\", \"D. formicigenerans\", \"C. comes\", \"B. crossotus\", \"B. obeum\", \"B. hansenii\", \"E. siraeum\", \"E. rectale\", \"E. limosum\", \"E. eligens\", \"P. difficile\", \"C. saccharolyticum\", \"C. ramosum\", \"C. perfringens S107\", \"C. perfringens C36\", \"C. leptum\", \"C. bolteae\", \"S. salivarius\", \"S. parasanguinis\", \"L. lactis\", \"L. vaginalis\", \"L. salivarius\", \"L. sakei subsp. sakei\", \"L. plantarum\", \"L. paracasei\", \"L. gasseri\", \"L. fermentum\", \"L. acidophilus\", \"L. ruminis\", \"L. delbrueckii subsp. delbrueckii\", \"B. xylanisolvens\", \"B. vulgatus HM−720\", \"B. vulgatus\", \"B. uniformis HM−716\", \"B. uniformis HM−715\", \"B. uniformis\", \"B. thetaiotaomicron\", \"B. stercoris\", \"B. ovatus\", \"B. fragilis\", \"B. fragilis HM−714\", \"B. fragilis HM−713\", \"B. fragilis HM−712\", \"B. fragilis HM−711\", \"B. fragilis HM−710\", \"B. fragilis HM−709\", \"B. fragilis HM−20\", \"B. fragilis enterotoxigenic\", \"B. eggerthii\", \"B. dorei\", \"B. coprocola\", \"B. clarus\", \"B. caccae\", \"A. shahii\", \"A. putredinis\", \"P. merdae\", \"P. distasonis\", \"O. splanchnicus\", \"P. melaninogenica\", \"P. copri\", \"E. lenta\", \"C. aerofaciens\", \"B. longum subsp. infantis\", \"B. animalis subsp. lactis BL−04\", \"B. animalis subsp. lactis BI−07\", \"B. adolescentis\", \"A. odontolyticus\")\n  figS4a.media = c(\"8\")\n  figS4a.matrix = growth_matrix[figS4a.species,figS4a.media, drop=F]\n  figS4a.matrix_text = growth_matrix.text[figS4a.species,figS4a.media, drop=F]\n  pheatmap(figS4a.matrix, main=\"Relative effect on growth (OD)\", \n           cluster_rows=F,cluster_cols=F,\n           annotation_row=growth_matrix.ann, \n           annotation_colors=growth_matrix.ann.colors,\n           color=growth_matrix.pal, breaks=growth_matrix.pal_breaks, border_color=\"#CCCCCC\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n           #display_numbers=figS4a.matrix_text, fontsize_number=8,\n           filename=\"../report/figS4a_media_influence_mucin.pdf\")\n  \n  figS4b.species = c(\n    \"A. muciniphila\", \"R. torques\", \n    \"B. hansenii\", \"C. perfringens S107\", \n    \"B. caccae\", \"B. clarus\", \"B. fragilis\", \"B. ovatus\",\"B. thetaiotaomicron\", \"B. uniformis HM-716\", \"B. xylanisolvens\", \"P. capillosus\", \"P. merdae\", \"R. intestinalis\",\n    \"C. comes\", \"E. coli UTI89\", \"L. paracasei\", \"P. difficile\", \"S. sonnei\", \n    \"B. longum subsp. longum\", \"B. stercoris\", \"C. aerofaciens\", \"C. bolteae\", \"H. parainfluenzae\", \"R. hominis\")\n  figS4b.media = c(\"8\")\n  figS4b.matrix = growth_matrix[figS4b.species,figS4b.media, drop=F]\n  figS4b.matrix_text = growth_matrix.text[figS4b.species,figS4b.media, drop=F]\n  pheatmap(figS4b.matrix, main=\"Relative effect on growth (OD)\", \n           cluster_rows=F,cluster_cols=F,\n           annotation_row=growth_matrix.ann, \n           annotation_colors=growth_matrix.ann.colors,\n           color=growth_matrix.pal, breaks=growth_matrix.pal_breaks, border_color=\"#CCCCCC\",\n           fontsize=18, cellwidth=18, cellheight=12, height=21, width=14, fontsize_row=11, fontsize_col=16,\n          #display_numbers=figS4a.matrix_text, fontsize_number=8,\n  filename=\"../report/figS4b.pdf\")\n}\n\nitol = function()\n{\n  organisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\n  \n  growth_matrix = read.table(\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  colnames(growth_matrix) = gsub(\"^M\", \"\", colnames(growth_matrix))\n  colnames(growth_matrix) = gsub(\"BHI\", \"BHI++\", colnames(growth_matrix))\n  rownames(growth_matrix) = gsub(\"[^A-Za-z0-9]+\", \"_\", growth_matrix$species)\n  growth_matrix$species = NULL\n  \n  mean(colSums(growth_matrix>0, na.rm=T))\n  mean(rowSums(growth_matrix>0, na.rm=T))\n  \n  growth_matrix.dist = dist.species(t(growth_matrix))\n  growth_matrix.hclust = hclust(growth_matrix.dist, method=\"average\")\n  growth_matrix_phylo = as.phylo(growth_matrix.hclust)\n  write.tree(growth_matrix_phylo, \"../report/itol/growth_tree.newick\")\n\n  organisms.ann$phylum.color = phylumcol[organisms.ann$phylum]\n  organisms.ann$phylum.color_type = \"range\"\n  rownames(organisms.ann) = gsub(\"[^A-Za-z0-9]+\", \"_\", organisms.ann$species)\n  \n  writeLines(paste0(\n    \"TREE_COLORS\n    SEPARATOR TAB\n    DATASET_LABEL\\tSPECIES_ANNOTATION\n    DATA\"), \"../report/itol/phylogenetic_color.txt\")\n  write.table(subset(organisms.ann, , c(phylum.color_type, phylum.color, phylum)), file=\"../report/itol/phylogenetic_color.txt\", append=T, sep=\"\\t\", quote=F, col.names=F, row.names=T, na=\"\")\n}\n\nmedia_preference = function()\n{\n  media.defined = as.character(c(2:5, 7, 10:11))\n  abundant_species = read.table(\"../data/_abundant_species.txt\", sep=\"\\t\", quote=\"\", header=F, stringsAsFactors=F, na.strings=\"\")$V1\n  organisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\n\n  # Load abundance average data (only species passing 1% rel. abundance and 10% prevalence threshold)\n  # Aggregate abundance data by species level (merge strains)\n  organisms.gut = read.table(\"../data/screenG_tax_info_specI_clusters.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  organisms.gut = merge(organisms.gut, organisms.ann[!is.na(organisms.ann$nid), c(\"species\", \"lineage_species\", \"nid\")], by.x=\"NT_code\", by.y=\"nid\")\n  organisms.gut = ddply(organisms.gut, .(lineage_species), summarize, Prevalence=mean(Prevalence), Prevalence=mean(Prevalence), Abundance=mean(Rel_ab_median))\n  rownames(organisms.gut) = organisms.gut$lineage_species\n\n  # Load species monoculture growth data\n  # Aggregate growth data by species level (merge strains)\n  #growth_matrix = read.table(\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a.f = subset(curves.a, is.na(ConditionSpecies) & !is.na(Species) & Passage %in% 1 & Media %in% c(media.rich, media.defined) & !is.na(Media))\n  growth_matrix = cuves.merge_annotations2(curves.a.f, nogrowth=T)\n  growth_matrix = dcast(growth_matrix, Species ~ Media, value.var=\"MaxOD\")\n  colnames(growth_matrix)[1] = \"species\" \n  growth_matrix = merge(growth_matrix, organisms.ann[, c(\"species\", \"lineage_species\")], by=\"species\")\n  \n  \n  growth_matrix = ddply(growth_matrix, .(lineage_species), function(x) { \n    if(nrow(x) > 2) {xx <<- x}\n    x.mean = matrix(rep(colMeans(x>0), each=nrow(x)), ncol=ncol(x))\n    x[x==0 & x.mean>0.5] = NA\n    x.cols = setdiff(colnames(x), c(\"species\", \"lineage_species\"))\n    x = apply(x[,x.cols], 2, min, na.rm=T)\n    x[is.nan(x)] = NA\n    x\n  })\n  colnames(growth_matrix) = gsub(\"^M\", \"\", colnames(growth_matrix))\n  rownames(growth_matrix) = growth_matrix$lineage_species\n  growth_matrix$lineage_species = NULL\n  growth_matrix = growth_matrix[,c(media.defined, media.rich)]\n  \n  \n  # Create ranked and scaled growth matrix\n  growth_matrix.rank = apply(growth_matrix, 2, function(x) { \n    x.res = length(x) - rank(x, ties.method=\"min\") + 1\n    x.res\n  })\n  \n  growth_matrix.rank_table = data.frame(lineage_species=rownames(growth_matrix.rank))\n  rownames(growth_matrix.rank_table) = growth_matrix.rank_table$lineage_species\n  growth_matrix.rank_table$rich_medrank = apply(growth_matrix.rank[, media.rich], 1, median, na.rm=T)\n  growth_matrix.rank_table$defined_medrank = apply(growth_matrix.rank[, media.defined], 1, function(z) mean(sort(z)[3:5], na.rm=T))\n  growth_matrix.rank_table$preference = with(growth_matrix.rank_table, log2(rich_medrank / defined_medrank))\n  growth_matrix.rank_table$preferred_media = \"no preferrence\"\n#  growth_matrix.rank_table$preferred_media[growth_matrix.rank_table$preference <= -1] = \"rich\"\n  growth_matrix.rank_table$preferred_media[growth_matrix.rank_table$preference >= 1] = \"defined\"\n  growth_matrix.rank_table$preferred_media = factor(growth_matrix.rank_table$preferred_media, c(\"rich\", \"no preferrence\", \"defined\"))\n  growth_matrix.rank_table$Abundance = organisms.gut[rownames(growth_matrix.rank_table), \"Abundance\"]\n  growth_matrix.rank_table$Prevalence = organisms.gut[rownames(growth_matrix.rank_table), \"Prevalence\"]\n  growth_matrix.rank_table$AverageDefinedMaxOD = rowMeans(growth_matrix[, as.character(intersect(colnames(growth_matrix), c(1:8, 10:11)))])[rownames(growth_matrix.rank_table)]\n  \n  growth_matrix.rank_table.export = growth_matrix.rank_table\n  colnames(growth_matrix.rank_table.export)[1] = \"Species\"\n  growth_matrix.rank_table.export = growth_matrix.rank_table.export[,c(\"Species\", \"rich_medrank\", \"defined_medrank\", \"preferred_media\", \"Abundance\", \"Prevalence\")]\n  write.table(growth_matrix.rank_table.export, file=\"../report/tables/s7_Defined_media_preferrence.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n\n  dens = density(growth_matrix.rank_table$preference, na.rm=T)\n  df = data.frame(x=dens$x, y=dens$y)\n  df$preferred_media = \"no preferrence\"\n  df$preferred_media[df$x <= -1] = \"rich\"\n  df$preferred_media[df$x >= 1] = \"defined\"\n  df.n = ddply(growth_matrix.rank_table, .(preferred_media), summarize, N=sum(organisms.ann$lineage_species %in% lineage_species), preference=median(preference))\n  \n  pdf(\"../report/media_preferrence.pdf\", height=4.5, width=7.5)\n  defined_growth_pval = with(growth_matrix.rank_table, t.test(AverageDefinedMaxOD[preferred_media=='defined'], AverageDefinedMaxOD[preferred_media!='defined']))$p.value\n  ggplot(growth_matrix.rank_table) +\n    geom_density(aes(fill=preferred_media, x=AverageDefinedMaxOD), alpha=0.3) + \n    theme_slim() +\n    labs(fill=\"Preferred media\", x=\"Average MaxOD on defined media\") +\n    scale_fill_manual(values=RColorBrewer::brewer.pal(9, \"Greys\")[c(4, 9)]) +\n    theme(legend.position = c(0.2, 0.8))\n  \n  ggplot(df, aes(x, y)) +\n    geom_line() +\n    geom_ribbon(aes(ymin=0, ymax=y, fill=preferred_media)) +\n    geom_text(aes(x=preference, label=N), y=0.1, data=df.n) + \n    geom_text(aes(x=-2.5, y=0.4, label=\"Rich media preferred\"), size=5) +\n    geom_text(aes(x=2.5, y=0.4, label=\"Defined media preferred\"), size=5) +\n    labs(title=\"Media preferrence\", x=\"rich(%)/defined(%)\", y=\"\") + \n    scale_fill_manual(values=c(\"rich\"=\"#FF777755\", \"no preferrence\"=\"#00000000\", \"defined\"=\"#77FF7755\")) +\n    theme_slim()\n  \n  set.seed(0)\n  growth_matrix.rank_table.f = subset(growth_matrix.rank_table, !is.na(Prevalence))\n  growth_matrix.rank_table.metahitsum = ddply(growth_matrix.rank_table.f, .(preferred_media), summarize, N=length(preferred_media), MeanPrevalence=mean(Prevalence))\n  growth_matrix.rank_table.ttest = with(growth_matrix.rank_table.f, t.test(Prevalence[preferred_media==\"defined\"], Prevalence[preferred_media!=\"defined\"]))\n  ggplot(growth_matrix.rank_table.f) +\n    geom_boxplot(aes(preferred_media, Prevalence), fill=\"#D4D4D4\") +\n    geom_jitter(aes(preferred_media, Prevalence), fill=\"#D4D4D4\") +\n    geom_text(aes(preferred_media, MeanPrevalence, label=N), data=growth_matrix.rank_table.metahitsum) +\n    #geom_text(aes(preferred_media, Prevalence, label=lineage_species)) +\n    theme_slim() +\n    geom_text(x=1.5, y=1, label=round(growth_matrix.rank_table.ttest$p.value, 5)) +\n    labs(title=\"Species prevalence in MetaHIT\", y=\"Prevalence in MetaHIT, %\", x=\"\")\n  dev.off()\n}\n  \n  ",
    "created" : 1507212172813.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2799363816",
    "id" : "33CC9054",
    "lastKnownWriteTime" : 1507746702,
    "last_content_update" : 1507746701079,
    "path" : "X:/Sergej/methods_2/scripts/analysis.overview.R",
    "project_path" : "analysis.overview.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
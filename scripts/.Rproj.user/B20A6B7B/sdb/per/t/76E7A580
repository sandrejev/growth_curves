{
    "collab_server" : "",
    "contents" : "#\n# Table S3. Annotated data\n#\ntable.S3 = function() {\n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = subset(curves.a, !is.na(Species) & is.na(ConditionSpecies))\n  \n  curves.a = subset(curves.a, is.na(ConditionSpecies))\n  curves.a$TechnicalError = ifelse(grepl(\"Unrep|Undef\", curves.a$Class) & curves.a$Passage!=2, 1, 0)\n  curves.a$Unfinished = ifelse(grepl(\"Unfinished\", curves.a$Class), 1, 0)\n  curves.a$Unfinished[curves.a$TechnicalError==1] = NA\n  curves.a$Growth = ifelse(!grepl(\"NoGrowth\", curves.a$Class), 1, 0)\n  curves.a$Growth[curves.a$TechnicalError==1] = NA\n  curves.a$MaxOD[curves.a$TechnicalError==1] = NA\n  curves.a$BlankOD[curves.a$TechnicalError==1] = NA\n  curves.a$Rate[curves.a$TechnicalError==1] = NA\n  curves.a$AUC8[curves.a$TechnicalError==1] = NA\n  curves.a$AUC12[curves.a$TechnicalError==1] = NA\n  curves.a$AUC18[curves.a$TechnicalError==1] = NA\n  curves.a$AUC24[curves.a$TechnicalError==1] = NA\n  curves.a = curves.a[,c(\"File\", \"TechnicalReplicates\", \"Media\", \"Passage\", \"Species\", \"TechnicalError\", \"Growth\",  \"Unfinished\", \"pH_48.mean\", \"BlankOD\", \"MaxOD\", \"Rate\", \"AUC8\", \"AUC12\", \"AUC18\", \"AUC24\")]\n\n  write.table(curves.a, file=\"../report/tables/S3_Annotated_data.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n}\n\n#\n# Table S4. Growth matrix\n#\ntable.s4 = function()\n{\n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = subset(curves.a, !is.na(Species) & is.na(ConditionSpecies) & Passage==1 & !grepl(\"_\", Media))\n  \n  growth_matrix.q1 = cuves.merge_annotations2(curves.a)\n  growth_matrix.q1$Media = gsub(\"^([0-9])\", \"M\\\\1\", growth_matrix.q1$Media)\n  growth_matrix.q.raw = dcast(growth_matrix.q1, Species ~ Media, value.var=\"MaxOD\")\n  growth_matrix.q.export = growth_matrix.q.raw[,c(\"Species\", \"GMM\", \"BHI++\", \"WCA\", \"mGAM\", paste0(\"M\", c(1:5,7:11, 13:14, \"15 A\", \"15 B\", \"16\")))]\n  write.table(growth_matrix.q.export, file=\"../report/tables/S4_growth_matrix.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n}\n\n#\n# Table S5 Exact sample size\n#\ntable.S5 = function() {\n  curves.a = read.table(\"../data/curves_annotation.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  curves.a = subset(curves.a, !is.na(Species) & is.na(ConditionSpecies) & Passage==1 & !grepl(\"_\", Media))\n\n  curves.a$TechnicalReplicatesCount = sapply(curves.a$TechnicalReplicates, function(x) {\n    x.chars = unlist(strsplit(gsub(\"([0-9])\", \"\", x), \"-\"))\n    x.nums = unlist(strsplit(gsub(\"([A-Z])\", \"\", x), \"-\"))\n    s.size1 = strtoi(charToRaw(x.chars[2]),16L) - strtoi(charToRaw(x.chars[1]),16L) + 1\n    s.size2 = as.numeric(x.nums[2]) - as.numeric(x.nums[1]) + 1\n    pmax(s.size1, s.size2)\n  })\n  curves.tech = ddply(curves.a, .(Species, Media), summarize, TechnicalReplicatesCount=sum(TechnicalReplicatesCount, na.rm=T))\n  \n  growth_matrix.q1 = cuves.merge_annotations2(curves.a)\n  growth_matrix.q1 = merge(growth_matrix.q1, curves.tech, by=c(\"Species\", \"Media\"))\n  growth_matrix.q1$ReplicatesText = paste0(growth_matrix.q1$Replicates, \" (\", growth_matrix.q1$TechnicalReplicatesCount, \")\")\n  growth_matrix.q.replicates = dcast(growth_matrix.q1, Species ~ Media, value.var=\"ReplicatesText\")\n  growth_matrix.q.replicates = growth_matrix.q.replicates[,c(\"Species\", \"GMM\", \"BHI++\", \"WCA\", \"mGAM\", as.character(1:5), as.character(7:11), \"13\", \"14\", \"15 A\", \"15 B\", \"16\")]\n  growth_matrix.q.replicates[is.na(growth_matrix.q.replicates)] = \"0 (0)\"\n  colnames(growth_matrix.q.replicates)[6:20] = paste0(\"M\", colnames(growth_matrix.q.replicates)[6:20])\n  View(growth_matrix.q.replicates)\n  write.table(growth_matrix.q.replicates, file=\"../report/tables/S5_Exact_sample_size.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n}\n\ntable.S6_fig3a_pvalues = function() {\n  \n}\n",
    "created" : 1507740640815.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "529808569",
    "id" : "76E7A580",
    "lastKnownWriteTime" : 1507746700,
    "last_content_update" : 1507746698322,
    "path" : "X:/Sergej/methods_2/scripts/supplementary.generate.R",
    "project_path" : "supplementary.generate.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
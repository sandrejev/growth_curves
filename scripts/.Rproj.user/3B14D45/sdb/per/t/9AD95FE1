{
    "collab_server" : "",
    "contents" : "library(XLConnect)\nlibrary(reshape2)\nlibrary(plyr)\nlibrary(ggplot2)\nlibrary(RSQLite)\n\n\nmedia.annotation = read.delim(\"../data/media_names.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\nmedia.annotation = media.annotation[order(media.annotation$Order),]\nmedia.names = sapply(media.annotation$ShortName, function(x) media.annotation$FullName[match(x, media.annotation$ShortName)])\nmedia.names2 = sapply(media.annotation$ShortName, function(x) media.annotation$FullName2[match(x, media.annotation$ShortName)])\nmedia.general = media.annotation$ShortName[media.annotation$IsGeneral==1]\nmedia.rich = media.annotation$ShortName[media.annotation$IsRich==1]\nmedia.files = sapply(media.annotation$ShortName, function(x) media.annotation$Filename[match(x, media.annotation$ShortName)])\n\ngrey.palette = colorRampPalette(c(\"#F0F0F0\", \"#969696\", \"#252525\"))\n\npiechart.species_summary = function()\n{\n  species.summary = data.frame(name=\">=1% rel.\\nabundance\\n>=10%\\nprevalence\", number=58)\n  species.summary = rbind(species.summary, data.frame(name=\"pathogens\", number=13))\n  species.summary = rbind(species.summary, data.frame(name=\"probiotics\", number=13))\n  species.summary = rbind(species.summary, data.frame(name=\"linked to\\ncolorectal cancer\", number=3))\n  species.summary = rbind(species.summary, data.frame(name=\"linked to\\nfoodborne disease\", number=2))\n  species.summary = rbind(species.summary, data.frame(name=\"causing bacteremia\\nor sepsis\", number=2))\n  species.summary = rbind(species.summary, data.frame(name=\"additional\\nrepresentative\\nof genus\", number=3))\n  species.summary = rbind(species.summary, data.frame(name=\"representating separate\\nmetabolic clades\", number=2))\n  \n  pdf(\"../report/species_selection_overview.pdf\", height=6, width=8)\n  pie(species.summary$number, labels=species.summary$name, col=grey.palette(nrow(species.summary)), clockwise=T, init.angle=90)\n  dev.off()\n}\n\npiechart.media_summary = function()\n{\n  wb = XLConnect::loadWorkbook(\"../data/compounds.xlsx\")\n  df = XLConnect::readWorksheet(wb, sheet=1, header=T)\n  \n  result = list(cols=list(annotations=c(\"Class\", \"Compound\")))\n  result$cols$medias = setdiff(colnames(df), result$cols$annotations)\n  df$Class[df$Class==\"Buffer compounds\"] = \"Buffer\"\n  \n  data.regexp = \"([0-9]+(\\\\.[0-9]+)?) (.*)\"\n  data.unitdefs = list(\n    \"mg\" = list(canonic=\"g\", factor=1.0e-3),\n    \"g\" = list(canonic=\"g\", factor=1),\n    \"Âµg\" = list(canonic=\"g\", factor=1.0e-6),\n    \"mL\" = list(canonic=\"L\", factor=1.0e-3)\n  )\n  \n  medias = intersect(colnames(df), paste0(\"M\", 1:11))\n  df = df[rowSums(!is.na(df[,medias]))>0,]\n  data = df[,medias]\n  data.numbers = apply(data, 1:2, function(x) as.numeric(gsub(data.regexp, \"\\\\1\", x)))\n  data.units = apply(data, 1:2, function(x) gsub(data.regexp, \"\\\\3\", x))\n  \n  df.norm = apply(data.units, 1:2, function(x) ifelse(is.na(x), NA, data.unitdefs[[x]]$factor)) * data.numbers\n  df.norm[is.na(df.norm)] = 0\n  df.norm = cbind(df[,c(\"Class\", \"Compound\")], df.norm)\n  \n  media_matrix.long = melt(df.norm, id.vars=c(\"Class\", \"Compound\"), variable.name=\"Media\", value.name=\"Amount\")\n  compound_sum = ddply(subset(media_matrix.long, Media==\"M3\"), .(Compound), summarize, Amount=sum(Amount, na.rm=T))\n  rownames(compound_sum) = compound_sum$Compound\n  \n  media_matrix.long_s = ddply(media_matrix.long, .(Class, Media), function(z) {\n    amount = mean(ifelse(compound_sum[z$Compound, \"Amount\"] == 0, as.numeric(z$Amount>0), z$Amount / compound_sum[z$Compound, \"Amount\"]))\n    data.frame(Media=z$Media[1], Amount=amount)\n  })\n  \n  media_colors = c(\"M1\"=\"#F46D43\", \"M2\"=\"#D53E4F\", \"M3\"=\"#9E0142\", \"M4\"=\"#FFDB00FF\", \"M5\"=\"#49FF00FF\", \"M7\"=\"#00FF92FF\", \"M8\"=\"#0092FFFF\", \"M9\"=\"#4900FFFF\", \"M10\"=\"#FF00DBFF\", \"M11\"=\"#FF00BFFF\")\n  media_colors = c(\"M1\"=\"#F28260\", \"M2\"=\"#D35665\", \"M3\"=\"#9B2E5C\", \"M4\"=\"#FFEB7F\", \"M5\"=\"#A5FF7F\", \"M7\"=\"#7FFFC7\", \"M8\"=\"#7FC9FF\", \"M9\"=\"#A37FFF\", \"M10\"=\"#FF7FED\", \"M11\"=\"#FF7FDF\")\n  media_colors = rev(media_colors)\n  category_colors = c(\"Salts & Minerals\"=\"#E6AB02\", \"Vitamins & Antioxidants\"=\"#E7298A\", \"SCFA\"=\"#D95F02\", \"Sugar\"=\"#1B9E77\", \"Mucin\"=\"#386CB0\", \n                      \"Amino acids\"=\"#7570B3\", \"Nucleotids\"=\"#A6761D\", \"Others\"=\"#666666\", \"Buffer\"=\"#66A61E\")\n  \n  media_matrix.long_s$Amount[media_matrix.long_s$Amount==0] = NA\n  media_matrix.long_s = media_matrix.long_s[order(as.numeric(gsub(\"M\", \"\", media_matrix.long_s$Media))),]\n  media_matrix.long_s$MediaName = media.names2[gsub(\"M\", \"\", media_matrix.long_s$Media)]\n  media_matrix.long_s$MediaName = factor(media_matrix.long_s$MediaName, rev(unique(media_matrix.long_s$MediaName)))\n  media_matrix.long_s$Class = factor(media_matrix.long_s$Class, names(category_colors))\n  media_matrix.long_s$MediaComposition = with(media_matrix.long_s, ifelse(Amount>=1 | (Media %in% c(\"M1\", \"M2\", \"M3\")), \"GMM+LAB\", \"Modified\"))\n  media_matrix.long_s$MediaComposition[media_matrix.long_s$Class==\"Salts & Minerals\" & media_matrix.long_s$Media %in% paste0(\"M\", 5:11)] = \"GMM+LAB\"\n  names(media_colors) = media.names2[gsub(\"M\", \"\", names(media_colors))]\n  \n  pdf(\"../report/media_selection_overview.pdf\", height=6, width=8)\n  media_matrix.long_s_vline = unique(media_matrix.long_s[,\"Class\", drop=F])\n  ggplot(media_matrix.long_s) +\n    geom_hline(aes(yintercept=y), data=data.frame(y=seq(1, nlevels(media_matrix.long_s$MediaName), 2)), size=13, color=\"#F0F0F0\") + \n    geom_hline(aes(yintercept=y), data=data.frame(y=0:nlevels(media_matrix.long_s$MediaName)+0.5), size=0.25, color=\"#D9D9D9\", lty=2) + \n    geom_hline(yintercept=nlevels(media_matrix.long_s$MediaName)-2.5, size=2, color=\"#D9D9D9\") + \n    geom_vline(aes(xintercept=x), data=data.frame(x=0:nlevels(media_matrix.long_s$Class)+0.5), size=0.25, color=\"#D9D9D9\") + \n    geom_point(aes(x=as.numeric(Class), y=as.numeric(MediaName), size=Amount, color=Class, alpha=Amount), shape=20) + \n    geom_point(aes(x=as.numeric(Class), y=as.numeric(MediaName)), size=1, color=\"#FFFFFF\", fill=\"#FFFFFF\", shape=21, data=subset(media_matrix.long_s, MediaComposition==\"Modified\")) + \n    theme_classic(base_size=16) +\n    theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1), axis.ticks=element_blank()) +\n    labs(x=\"\", y=\"\") + \n    scale_fill_manual(values=category_colors, guide=F) + \n    scale_color_manual(values=category_colors, guide=F) + \n    scale_alpha_continuous(range=c(0.4, 0.8), guide=F) +\n    scale_size_area(max_size=16, guide=F) +\n    scale_shape_manual(values=c(\"GMM+LAB\"=16, \"Modified\"=1), guide=F) +\n    scale_x_continuous(breaks=1:nlevels(media_matrix.long_s$Class), labels=levels(media_matrix.long_s$Class), limits=c(0.95, nlevels(media_matrix.long_s$Class)+0.05)) +\n    scale_y_continuous(breaks=1:nlevels(media_matrix.long_s$MediaName), labels=levels(media_matrix.long_s$MediaName), limits=c(0.95, nlevels(media_matrix.long_s$MediaName)+0.25))\n  \n    media.summary = data.frame(name=c(\"newly compounded defined media (10)\", \"described minimal and defined media (5)\", \"rich media (4)\"))\n    media.summary$number = as.numeric(gsub(\".*\\\\((\\\\d+)\\\\)\", \"\\\\1\", media.summary$name))\n    pie(media.summary$number, labels=media.summary$name, col=grey.palette(3), clockwise=T, init.angle=90)\n  dev.off()\n}\n\ncummulative_plot.enzymatic_coverage = function()\n{\n  organisms = read.table(\"../data/organisms.tab\", na.strings=\"\", header=T, sep=\"\\t\", stringsAsFactors=F)\n  top95clusters = read.table(\"../data/screenG_tax_input_specI_clusters.tab\", na.strings=\"\", header=T, sep=\"\\t\", stringsAsFactors=F)\n  top95genus = read.table(\"../data/screenG_genus_order.tab\", na.strings=\"\", header=F, sep=\"\\t\", stringsAsFactors=F)$V1\n  db = dbConnect(SQLite(), dbname=\"../data/kegg.db\")\n  all.ec = dbGetQuery(db, paste0(\"SELECT DISTINCT ec4 AS ec4 FROM org2ec INNER JOIN tax2org ON (tax2org.org=org2ec.org) WHERE taxid IN (\", paste(top95clusters$taxid, collapse=\",\"), \")\"))\n  \n  top95ggplot = data.frame()\n  top95genus.ec = c()\n  for(genus in top95genus) {\n    unique(organisms$species[organisms$genus==\"Bilophila\"])\n    taxid.g = unique(organisms$taxid[!is.na(organisms$taxid) & organisms$genus==genus])\n    orgs.g = unique(organisms$nearest_kegg_org[!is.na(organisms$nearest_kegg_org) & organisms$genus==genus])\n    \n    #  query = paste0(\"SELECT DISTINCT ec4 FROM org2ec INNER JOIN tax2org ON (tax2org.org=org2ec.org) WHERE tax2org.taxid IN ('\", paste(taxid.g, collapse=\"','\"), \"') OR org2ec.org IN ('\", paste(orgs.g, collapse=\"','\"), \"')\")\n    query = paste0(\"SELECT DISTINCT ec4 FROM org2ec WHERE org2ec.org IN ('\", paste(orgs.g, collapse=\"','\"), \"')\")\n    genus.ec = dbGetQuery(db, query)\n    \n    top95genus.ec = unique(c(top95genus.ec, genus.ec$ec4))\n    top95ggplot = rbind(top95ggplot, data.frame(genus=genus, coverage=mean(all.ec$ec4 %in% genus.ec$ec4), cummulative=mean(all.ec$ec4 %in% top95genus.ec)))\n  }\n  top95ggplot$genus_i = as.numeric(top95ggplot$genus) - 0.5\n  \n  pdf(\"../report/species_selection_enzyme_coverage.pdf\", height=6, width=8)\n  par(las=2, mar=c(10,5,5,5))\n  plot(cummulative ~ genus, top95ggplot, type=\"s\", ylim=c(0, 1), xlab=\"\", col=\"#A4A4A4\")\n  lines(cummulative ~ genus_i, top95ggplot, type=\"s\")\n  dev.off()\n}",
    "created" : 1515717524910.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2205217253",
    "id" : "9AD95FE1",
    "lastKnownWriteTime" : 1515718331,
    "last_content_update" : 1515718330423,
    "path" : "X:/Sergej/gut_bacteria/scripts/analysis.media_species_selection.R",
    "project_path" : "analysis.media_species_selection.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
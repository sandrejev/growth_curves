{
    "collab_server" : "",
    "contents" : "source(\"analyze.functions.R\")\nlibrary(plyr)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(beeswarm)\n\nmedia.annotation = read.delim(\"../data/media_names.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\nmedia.annotation = media.annotation[order(media.annotation$Order),]\nmedia.general = media.annotation$ShortName[media.annotation$IsGeneral==1]\nmedia.rich = media.annotation$ShortName[media.annotation$IsRich==1]\n\nscatter.abundance_correlations = function()\n{\n  organisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\n  clusters = read.table(\"../data/screenG_tax_info_specI_clusters.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  organisms.ann = merge(organisms.ann[, c(\"species\", \"lineage_species\", \"phylum\", \"order\", \"genus\",  \"nid\")], clusters[,c(\"NT_code\", \"SpecI_ID\")], by.y=\"NT_code\", by.x=\"nid\", all.x=T)\n  colnames(organisms.ann)[colnames(organisms.ann)==\"SpecI_ID\"] = \"cluster\"\n\n  # Taxonimic distance\n  taxonomic_mat = data.matrix(read.table(\"../data/RefMGv9.speci.tax.dist.2017-03.tsv\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\"))\n  taxonomic_mat_long = melt(taxonomic_mat)[melt(upper.tri(taxonomic_mat))$value,]\n  names(taxonomic_mat_long) = c(\"cluster.sp1\", \"cluster.sp2\", \"TaxonomicDistance\")\n  taxonomic_mat_long[,c(\"cluster.sp1\", \"cluster.sp2\")] = t(apply(taxonomic_mat_long[,c(\"cluster.sp1\", \"cluster.sp2\")], 1, sort))\n  taxonomic_mat_long$TaxonomicDistance = factor(taxonomic_mat_long$TaxonomicDistance)\n  taxonomic_levels = c(\"Species\", \"Genus\", \"Family\", \"Order\", \"Class\", \"Phylum\", \"Kingdom\", \"Domain\")\n  taxonomic_mat_long$TaxonomicDistanceClass = factor(taxonomic_levels[taxonomic_mat_long$TaxonomicDistance], taxonomic_levels)\n  \n  # Phylogenetic distance\n  phylogenetic_mat = data.matrix(read.table(\"../data/RefMGv9.speci.phylo.dist.2017-03.tsv\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\"))\n  phylogenetic_mat_long = melt(phylogenetic_mat)[melt(upper.tri(phylogenetic_mat))$value,]\n  names(phylogenetic_mat_long) = c(\"cluster.sp1\", \"cluster.sp2\", \"PhylogeneticDistance\")\n  phylogenetic_mat_long[,c(\"cluster.sp1\", \"cluster.sp2\")] = t(apply(phylogenetic_mat_long[,c(\"cluster.sp1\", \"cluster.sp2\")], 1, sort))\n  phylogenetic_mat_long = merge(phylogenetic_mat_long, taxonomic_mat_long, by=c(\"cluster.sp1\", \"cluster.sp2\"))\n  phylogenetic.stats = ddply(phylogenetic_mat_long, .(TaxonomicDistanceClass), summarize, PhylogeneticDistance.median=median(PhylogeneticDistance, na.rm=T), PhylogeneticDistance.mean=mean(PhylogeneticDistance, na.rm=T), PhylogeneticDistance.sd=sd(PhylogeneticDistance, na.rm=T))\n  \n  phylogenetic.stats = data.frame(\n    TaxonomicDistanceClass=c(\"Species\", \"Genus\", \"Family\", \"Order\", \"Class\", \"Phylum\", \"Kingdom\"),\n    PhylogeneticDistance.mode = c(0.18, 0.32, 0.91, 1.1, 2.04, 2.65, 4.15),\n    PhylogeneticDistance.ci_min = c(0.0, 0.0, 0.25, 0.38, 1.4, 1.58, 3.21),\n    PhylogeneticDistance.ci_max = c(0.75, 0.8, 1.7, 1.6, 2.65, 3.45, 5.2)\n  )\n  phylogenetic.stats$TaxonomicDistanceClass = factor(phylogenetic.stats$TaxonomicDistanceClass, levels(phylogenetic_mat_long$TaxonomicDistanceClass))\n  phylogenetic.stats = phylogenetic.stats[order(phylogenetic.stats$TaxonomicDistanceClass),]\n  \n  # Growth matrix  \n  growth_matrix = read.table(\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\", check.names=F)\n  rownames(growth_matrix) = growth_matrix$Species\n  growth_matrix$Species = NULL\n  colnames(growth_matrix) = gsub(\"^M\", \"\", colnames(growth_matrix))\n  \n  # Calculate growth distance\n  growth_matrix_mat = as.matrix(dist.species(t(growth_matrix)))\n  growth_matrix.dist_long = melt(growth_matrix_mat)[melt(upper.tri(growth_matrix_mat))$value,]\n  names(growth_matrix.dist_long) <- c(\"species.sp1\", \"species.sp2\", \"GrowthDistance\")\n  growth_matrix.dist_long[,c(\"species.sp1\", \"species.sp2\")] = t(apply(growth_matrix.dist_long[,c(\"species.sp1\", \"species.sp2\")], 1, sort))\n  growth_matrix.dist_long = merge(growth_matrix.dist_long, organisms.ann, by.x=\"species.sp1\", by.y=\"species\")\n  growth_matrix.dist_long = merge(growth_matrix.dist_long, organisms.ann, by.x=\"species.sp2\", by.y=\"species\", suffixes=c(\".sp1\", \".sp2\"))\n  growth_matrix.dist_long_agg = ddply(growth_matrix.dist_long, .(cluster.sp1, cluster.sp2), function(z) { z.ret = z[1,]; z.ret$GrowthDistance = median(z$GrowthDistance); z.ret })\n  \n  growth2abundance = merge(growth_matrix.dist_long_agg, phylogenetic_mat_long, by=c(\"cluster.sp1\", \"cluster.sp2\"), suffixes=c(\".growth\", \".phylo\"))\n  growth2abundance = merge(growth2abundance, phylogenetic.stats, by=\"TaxonomicDistanceClass\")\n  growth2abundance$TaxonomicDistanceClass = as.character(growth2abundance$TaxonomicDistanceClass)\n  growth2abundance$TaxonomicDistanceClass[growth2abundance$TaxonomicDistanceClass %in% c(\"Class\", \"Order\")] = \"Class\"\n  growth2abundance = growth2abundance[,sort(colnames(growth2abundance))]\n  growth2abundance$PhylogeneticOutlier = with(growth2abundance, PhylogeneticDistance> (PhylogeneticDistance.mode + (PhylogeneticDistance.ci_max-PhylogeneticDistance.mode)/1.7))\n  growth2abundance$PhylogeneticOutlierText = ifelse(growth2abundance$PhylogeneticOutlier, \"Excluded\", \"Included\")\n  growth2abundance$TaxonomicDistanceClass = factor(growth2abundance$TaxonomicDistanceClass, c(\"Phylum\", \"Class\",\"Family\", \"Genus\", \"Species\"))\n  growth2abundance.f = growth2abundance #subset(growth2abundance, !PhylogeneticOutlier)\n  growth2abundance.cor = ddply(growth2abundance.f, .(TaxonomicDistanceClass), function(z) {\n    if(nrow(z) < 5) return(data.frame(rho=NA, pval=NA))\n    z.cor = cor.test(z$GrowthDistance, z$PhylogeneticDistance, method=\"spearman\")\n    data.frame(rho=z.cor$estimate, pval=z.cor$p.value)\n  })\n  \n  write.table(growth2abundance.cor, file=\"../data/generated/phylogeny_growth_correlation.tab\", sep=\"\\t\", quote=F, row.names=F, na=\"\")\n  \n  all.cor = cor.test(growth2abundance.f$GrowthDistance, growth2abundance.f$PhylogeneticDistance, method=\"spearman\")\n  growth2abundance.cor = rbind(growth2abundance.cor, data.frame(TaxonomicDistanceClass=\"Everything\", rho=all.cor$estimate, pval=all.cor$p.value))\n  growth2abundance.cor$TaxonomicDistanceClass = factor(growth2abundance.cor$TaxonomicDistanceClass, unique(growth2abundance.cor$TaxonomicDistanceClass))\n  rownames(growth2abundance.cor) = NULL\n  \n  \n  pdf(\"../report/phylogeny_growth_correlation.pdf\", paper=\"a4\", height=11.69, width=8.27)\n  gridExtra::grid.arrange(\n    ggplot(growth2abundance, aes(GrowthDistance, log10(PhylogeneticDistance))) +\n      geom_point(aes(color=TaxonomicDistanceClass, alpha=ifelse(TaxonomicDistanceClass==\"Phylum\", 0, 1))) + # shape=PhylogeneticOutlierText, \n      #geom_smooth(aes(color=TaxonomicDistanceClass), method=\"lm\", data=growth2abundance.f) +\n      geom_smooth(method=\"lm\", data=growth2abundance, color=\"#666666\") +\n      theme_slim() +\n      scale_alpha_continuous(range=c(0.5, 1), guide=F) +\n      scale_color_manual(values=c(Species=\"#000000\", Genus=\"#333333\", Family=\"#666666\", Class=\"#007FFF\", Phylum=\"#999999\", Everything=\"#666666\"))  +\n      #scale_shape_manual(values=c(Included=1, Excluded=4)) +\n      guides(shape=guide_legend(title=\"Included in correlation\"), color=guide_legend(title=\"Taxonomic level\")) +\n      theme(legend.position = c(1, 0), legend.justification = c(1, 0))  \n    ,    \n    ggplot(growth2abundance.cor) +\n      geom_bar(aes(x=TaxonomicDistanceClass, y=rho), stat=\"identity\") +\n      geom_segment(aes(x=as.numeric(TaxonomicDistanceClass)-0.3, xend=as.numeric(TaxonomicDistanceClass)+0.3, y=rho+0.025, yend=rho+0.025), stat=\"identity\", data=subset(growth2abundance.cor, pval < 0.05)) +\n      geom_text(aes(x=TaxonomicDistanceClass, rho+0.05, label=paste0(\"p. val: \", round(pval, 5))), stat=\"identity\", data=subset(growth2abundance.cor, pval < 0.05)) +\n      geom_hline(yintercept=0) +\n      labs(x=\"\") +\n      theme_slim()\n    ,\n    ncol=1, heights=c(0.6, 0.4)\n  )\n  dev.off()\n}\n\nbarplots.taxonomic_rank_growth = function()\n{\n  growth_matrix = read.table(\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\", check.names=F)\n  rownames(growth_matrix) = growth_matrix$Species\n  growth_matrix$Species = NULL\n  colnames(growth_matrix) = gsub(\"^M\", \"\", colnames(growth_matrix))\n  \n  # Calculate distance\n  growth_matrix_mat = as.matrix(dist.species(t(growth_matrix)))\n  \n  # Distance in long format\n  growth_matrix.dist_long = melt(growth_matrix_mat)[melt(upper.tri(growth_matrix_mat))$value,]\n  names(growth_matrix.dist_long) <- c(\"species1\", \"species2\", \"GrowthDistance\")\n  growth_matrix.dist_long[,c(\"species1\", \"species2\")] = t(apply(growth_matrix.dist_long[,c(\"species1\", \"species2\")], 1, sort))\n  \n  organisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\n\n  growth_matrix.dist_long = merge(growth_matrix.dist_long, organisms.ann, by.x=\"species1\", by.y=\"species\")\n  growth_matrix.dist_long = merge(growth_matrix.dist_long, organisms.ann, by.x=\"species2\", by.y=\"species\", suffixes=c(\".sp1\", \".sp2\"))\n  \n  x = cbind(subset(growth_matrix.dist_long, phylum.sp1==phylum.sp2 & order.sp1!=order.sp2), Rank=\"Phylum\")\n  x = rbind(x, cbind(subset(growth_matrix.dist_long, order.sp1==order.sp2 & genus.sp1!=genus.sp2), Rank=\"Order\"))\n  x = rbind(x, cbind(subset(growth_matrix.dist_long, genus.sp1==genus.sp2 & lineage_species.sp1!=lineage_species.sp2), Rank=\"Genus\"))\n  x = rbind(x, cbind(subset(growth_matrix.dist_long, lineage_species.sp1==lineage_species.sp2), Rank=\"Species\"))\n  growth_matrix.dist_long = x \n  \n  growth_matrix.dist_long\n  \n  pdf(\"../report/growth_taxonomic_rank_distances.pdf\", paper=\"a4r\", height=8.27, width=11.69)\n  ggplot(growth_matrix.dist_long) +\n    geom_boxplot(aes(Rank, GrowthDistance), fill=\"#D4D4D4\", outlier.color=\"#00000000\") +\n    geom_text(aes(Rank, GrowthDistance, label=n), data=ddply(growth_matrix.dist_long, .(Rank), summarize, GrowthDistance=median(GrowthDistance,na.rm=T), n=length(Rank)), size=8) +\n    geom_jitter(aes(Rank, GrowthDistance), alpha=0.25) +\n    labs(x=\"Species of the same\", y=\"Growth similarity (euclidean)\") +\n    theme_slim()\n  dev.off()\n  \n}\n\n\ncurves.cor_phenotypes2phylogeny = function()\n{\n  organisms.ann = read.delim(\"../data/organisms.tab\", sep=\"\\t\", na=\"\", quote=\"\", stringsAsFactors=F, header=T)\n  clusters = read.table(\"../data/screenG_tax_info_specI_clusters.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  organisms.ann = merge(organisms.ann[, c(\"species\", \"lineage_species\", \"phylum\", \"order\", \"genus\",  \"nid\")], clusters[,c(\"NT_code\", \"SpecI_ID\")], by.y=\"NT_code\", by.x=\"nid\", all.x=T)\n  colnames(organisms.ann)[colnames(organisms.ann)==\"SpecI_ID\"] = \"cluster\"\n  \n  growth_matrix = read.table(\"../data/supplementary/growth_matrix.tab\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\")\n  growth_matrix = growth_matrix[,!(colnames(growth_matrix) %in% c(\"M15A\", \"M15B\", \"M16\"))]\n  colnames(growth_matrix)[colnames(growth_matrix)==\"BHI\"] = \"BHI++\"\n  colnames(growth_matrix) = gsub(\"^M\", \"\", colnames(growth_matrix))\n  growth_matrix = merge(growth_matrix, subset(organisms.ann, !is.na(cluster), c(species, cluster)), by=\"species\")\n  growth_matrix = ddply(growth_matrix, .(cluster), function(x) { \n    x = subset(x, , -c(species, cluster))\n    x.0 = colSums(!is.na(x))>0\n    x[x==0] = NA\n    x = colMeans(x, na.rm=T)\n    x[is.na(x) & x.0] = 0\n    x[is.na(x)] = NA\n    x\n  })\n  rownames(growth_matrix) = growth_matrix$cluster\n  growth_matrix$cluster = NULL\n  growth_matrix.dist = dist.species(growth_matrix)\n  \n  # Phylogenetic distance\n  phylogenetic_mat = data.matrix(read.table(\"../data/RefMGv9.speci.phylo.dist.2017-03.tsv\", sep=\"\\t\", quote=\"\", header=T, stringsAsFactors=F, na.strings=\"\"))\n  phylogenetic_mat = phylogenetic_mat[rownames(growth_matrix), rownames(growth_matrix)]\n  phylogenetic_dist = as.dist(phylogenetic_mat)\n\n  library(ddply)\n  library(dendextend)\n  growth_matrix_dend = as.dendrogram(hclust(phylogenetic_dist, method=\"average\"))\n  curves.phylo_dend = as.dendrogram(hclust(phylogenetic_dist, method=\"average\"))\n  dendrograms = dendlist(curves.phylo_dend, growth_matrix_dend) %>% untangle(\"labels\")  %>% untangle_DendSer %>% untangle(\"random\", R=100)\n  \n  #\n  # Phylogenetic/Growth tanglegram\n  #\n  #tanglegram.colors = organisms.ann$GENUS[match(labels(dendrograms[[1]]), organisms.ann$species)]\n  #tanglegram.colors[tanglegram.colors %in% c(\"Salmonella\", \"Shigella\")] = \"Escherichia\"\n  #tanglegram.colors = factor(tanglegram.colors, names(sort(table(tanglegram.colors), decreasing=T)))\n  #tanglegram.colors = c(RColorBrewer::brewer.pal(5, \"Set1\"), rep(\"#999999\", 16-5))[tanglegram.colors]\n  tanglegram(dendrograms, margin_inner=12, main_left=\"Phylogeny\", main_right=\"Growth\")\n}\n",
    "created" : 1515716215498.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "309629438",
    "id" : "DAB2BFBC",
    "lastKnownWriteTime" : 1515766256,
    "last_content_update" : 1515766254722,
    "path" : "X:/Sergej/gut_bacteria/scripts/analysis.phylogenetic.R",
    "project_path" : "analysis.phylogenetic.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}